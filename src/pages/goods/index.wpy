<style lang="less">
.value-class {
  flex: none !important;
}
.dialog-box {
  background-color: #edebec;
  padding-bottom: 15px;
  max-height: 80vh;
  overflow: auto;
}
</style>

<template>
  <view>
    <view class="top-box">
      <van-search placeholder="请输入货主或商品名称" @search="onSearch"/>
    </view>
    <scroll-view scroll-y style="height: {{windowHeight}}px; padding-top:10px;" bindscrolltolower="scrollLower">
      <block wx:if="{{resultData.dataList.length>0}}">
      <van-cell-group>
        <repeat for="{{resultData.dataList}}" key="index" index="index" item="item">
          <van-cell title="{{item.productName}}" value="{{item.ownerName}}" size="large" label="批号{{item.batchNum}}" id="{{index}}" @tap="onCheckGoods"/>
        </repeat>
      </van-cell-group>
      </block>
      <block wx:else>
          <nodata></nodata>
      </block>
    </scroll-view>

    <van-dialog
      use-slot
      show="{{ checkInfoShow }}"
      show-cancel-button
      bind:close="onCloseDialog"
      bind:confirm="onConfirmDialog"
    >
      <view class="dialog-box">
        <text class="van-block__title">当前操作</text>
        <van-cell-group>
          <van-field value="{{checkInfo.productName}}" label="商品" readonly/>
          <van-field value="{{checkInfo.ownerName}}" label="货主" readonly/>
          <van-field value="{{checkInfo.batchNum}}" label="批号" readonly/>
        </van-cell-group>
        <text class="van-block__title">方式</text>
        <van-tabs type="card"  active="{{ tabsActive }}" @change="onChangeTabs">
          <van-tab title="重量(斤)"></van-tab>
          <van-tab title="件"></van-tab>
        </van-tabs>
        <text class="van-block__title">基本信息</text>
        <van-cell-group>
          <block wx:if="{{tabsActive}}">
            <van-field value="{{inputData.Packages}}" placeholder="件数" label="件数" data-name="Packages"  
        @change="onInput" />
          </block>
          <block wx:else>
            <van-field value="{{inputData.Weight}}" placeholder="重量" label="重量" data-name="Weight"  
        @change="onInput" />
          </block>
          <van-field value="{{inputData.Price}}" placeholder="单价" label="单价" data-name="Price"  
        @change="onInput" />
        </van-cell-group>
      </view>
    </van-dialog>

    <van-toast id="van-toast"/>
    <van-dialog id="van-dialog"/>

  </view>
</template>

<script>
import wepy from 'wepy';
import Api from '../../utils/api';
import Toast from '../../components/vant/toast/toast';
import Dialog from '../../components/vant/dialog/dialog';
import noData from '../../components/nodata';

export default class GoodsIndex extends wepy.page {
  config = {
    navigationBarTitleText: '选择商品',
    usingComponents: {
      'van-search': '../../components/vant/search/index',
      'van-cell': '../../components/vant/cell/index',
      'van-cell-group': '../../components/vant/cell-group/index',
      'van-dialog': '../../components/vant/dialog/index',
      'van-field': '../../components/vant/field/index',
      'van-toast': '../../components/vant/toast/index',
      "van-icon": "../../components/vant/icon/index",
      "van-tab": "../../components/vant/tab/index",
      "van-tabs": "../../components/vant/tabs/index"
    }
  };

  components = {
    nodata: noData
  };

  data = {
    windowHeight: 0,
    hasNextPage: true,
    checkInfoShow: false,
    checkInfo: [],
    tabsActive: 0,
    QueryData: {
      pageIndex: 1,
      pageSize: 10,
      keyword: ''
    },
    resultData: {
      dataList: []
    },
    ProductList: [],
    inputData: {
      ProductID: 0,
      Packages: '',
      Weight: '',
      Price: ''
    }
  };

  computed = {};

  methods = {
    onInput(e){
      var value = e.detail;
      var name = e.currentTarget.dataset.name;
      this.inputData[name] = value;
    },
    onChangeTabs(event) {
      this.tabsActive = event.detail.index;
    },
    onSearch(e) {
      this.QueryData.keyword = e.detail;
      this.QueryData.pageIndex = 1;
      this.hasNextPage = true;
      this.resultData.dataList = [];
      this.StaffGetProductList();
    },
    onCheckGoods(e){
      var index = e.currentTarget.id;
      this.checkInfoShow = true;
      this.inputData.Packages = '';
      this.inputData.Weight = '';
      this.inputData.Price = '';
      this.inputData.ProductID = this.resultData.dataList[index].id;
      this.checkInfo = this.resultData.dataList[index];
    },
    onCloseDialog(){
      this.checkInfoShow = false;
      this.$apply();
    },
    onConfirmDialog(){
      var result = this.ProductList;
      this.checkInfoShow = false;
      if(this.inputData.Packages == ''){
          this.inputData.Packages = 0;
      }
      if(this.inputData.Weight == ''){
          this.inputData.Weight = 0;
      }
      if(this.inputData.Price == ''){
          this.inputData.Price = 0;
      }
      var inputNewData = {
        ProductID: 0,
        Packages: this.inputData.Packages,
        Weight: this.inputData.Weigh,
        Price: this.inputData.Price
      }
      this.ProductList = result.concat(inputNewData);
      console.log(this.ProductList)
      this.$apply();
    },
    scrollLower(){
      this.StaffGetProductList();
    }
  };

  events = {};

  StaffGetProductList(){
    var that = this;
    var result = that.resultData.dataList;
    if(that.hasNextPage){
      Toast.loading({
        message: '加载中...',
      });
      Api.StaffGetProductList(that.QueryData,function(res){
        Toast.clear();
        if (res.result) {
          that.resultData.dataList = result.concat(res.resultData.dataList);
          that.hasNextPage = res.resultData.hasNextPage;
          that.QueryData.pageIndex += 1;
          that.$apply();
        }
      });
    }else{
      Toast({
        position: 'bottom',
        message: '没有更多数据了',
        duration: 1000
      });
    }
  }

  onLoad() {
    let that = this;
    let windowHeight = wx.getSystemInfoSync().windowHeight;
    let query = wx.createSelectorQuery();
    query
      .select('.top-box')
      .boundingClientRect()
      .exec(function(res) {
        that.windowHeight = windowHeight - res[0].height;
      });

    that.StaffGetProductList();
  }
}
</script>
