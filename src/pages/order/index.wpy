<style lang="less">
.goods_list{
    .van-cell__title{
        font-weight: bold;
    }
    .van-cell__value{
        color: #f44;
    }

    .van-card{
        position: relative;
        padding: 0;
        background-color: transparent;

        .van-card__title{
            font-size: 14px;
            font-weight: normal;
            padding-bottom: 10px;
        }

        .desc{
            color: #f44;
            text{
                padding-right: 10px;
                font-size: 12px;
                &:first-child{
                    font-size: 14px;
                }
                &:last-child{
                    color: #333;
                    margin-left: -5px;
                }
            }
        }

        .button{
            position: absolute;
            right: 0;
            bottom: 0;
        }
    } 
}

</style>

<template>
    <view>

        <text class="van-block__title">基础信息</text>
        <van-cell-group>
            <van-cell title="部门" value="{{userInfo.regionName}}"/>
            <van-swipe-cell right-width="{{ 120 }}">
                <van-cell-group>
                    <van-cell title="客户" value="{{clientInfo.name}} {{clientInfo.tag}}" url="../client/index" is-link/>
                </van-cell-group>
                <view slot="right">
                    <van-button type="danger" @tap="onDeleteClient">删除选择客户</van-button>
                </view>
            </van-swipe-cell>
            <van-cell title="商品" url="../goods/index" is-link/>
        </van-cell-group>

        <text class="van-block__title">商品信息</text>
        <van-panel custom-class="goods_list" title="商品总额" status="￥{{totalPrice}}">
            <van-cell-group>
                <repeat for="{{QueryData.ProductList}}" key="index" index="index" item="item">
                    <van-cell>
                        <view slot="title">
                            <van-card title="{{item.ProductName}}">
                                <view slot="bottom" class="desc">
                                    <text class="price">￥{{item.UnitPrice}}</text>
                                    <block wx:if="{{item.Packages == 0}}">
                                        <text>x {{item.Weight}}</text>
                                        <text>(斤)</text>
                                    </block>
                                    <block wx:if="{{item.Weight == 0}}">
                                        <text>x {{item.Packages}}</text>
                                        <text>(件)</text>
                                    </block>
                                </view>
                                <view slot="footer" class="button">
                                    <van-button size="mini" type="warning" id="{{index}}" plain @tap="onDelectPro">删除</van-button>
                                </view>
                            </van-card>
                        </view>
                    </van-cell>
                </repeat>
            </van-cell-group>
        </van-panel>
        
        <text class="van-block__title">备注信息</text>
        <van-cell-group>
            <van-field
                value="{{ QueryData.Intro }}"
                type="textarea"
                placeholder="备注信息"
                autosize
                border="{{ false }}"
                data-name="Intro"  
                @change="onInput" 
            />
        </van-cell-group>

        <van-submit-bar
            price="{{ totalPrice*100 }}"
            button-text="提交"
            bind:submit="onSubmit"
            />

        <van-toast id="van-toast"/>
        <van-dialog id="van-dialog"/>
    </view>
</template>

<script>
import wepy from 'wepy';
import Api from '../../utils/api';
import util from '../../utils/utils';
import Toast from '../../components/vant/toast/toast';
import Dialog from '../../components/vant/dialog/dialog';

export default class OrderIndex extends wepy.page {
  config = {
    navigationBarTitleText: '开单',
    usingComponents: {
      'van-field': '../../components/vant/field/index',
      'van-button': '../../components/vant/button/index',
      'van-cell': '../../components/vant/cell/index',
      'van-cell-group': '../../components/vant/cell-group/index',
      'van-card': '../../components/vant/card/index',
      'van-panel': '../../components/vant/panel/index',
      "van-submit-bar": "../../components/vant/submit-bar/index",
      'van-toast': '../../components/vant/toast/index',
      'van-dialog': '../../components/vant/dialog/index',
      "van-swipe-cell": "../../components/vant/swipe-cell/index"
    }
  };

  components = {};

  data = {
    userInfo: {
        regionName: '',
        name: ''
    },
    clientInfo: [],
    QueryData: {
      TotalPrice: 0,
      CustomerID: 0,
      Intro: '',
      ProductList: []
    },
  };

  computed = {
      totalPrice(){
        var totalPrice = 0;
        this.QueryData.ProductList.forEach(function(e) {
            totalPrice += e.UnitPrice* e.Packages + e.UnitPrice* e.Weight;
        });
        this.QueryData.TotalPrice = totalPrice;
        return totalPrice;
      }
  };

  methods = {
      onDeleteClient(){
          wx.removeStorage({
            key: 'clientInfo'
         });
         this.QueryData.CustomerID = '';
         this.clientInfo = [];
      },
      onInput(e){
        var value = e.detail;
        var name = e.currentTarget.dataset.name;
        this.QueryData[name] = value;
      },
      onDelectPro(e){
        var index = e.currentTarget.id;
        Dialog.confirm({
            title: '提示',
            message: '确认删除吗?'
        }).then(() => {
            this.QueryData.ProductList.splice(index, 1);
            wx.setStorage({
                key: 'productList',
                data: this.QueryData.ProductList
            });
            this.$apply();
        });
      },
      onSubmit(){
        Dialog.confirm({
            title: '提示',
            message: '确认无误提交信息吗?'
        }).then(() => {
            this.StaffCreateOrder();
        });   
      }
  };

  events = {};

    StaffCreateOrder(){
        var that = this;
        Api.StaffCreateOrder(that.QueryData,function(res) {
            if (res.errCode == '1001') {
                wx.reLaunch({
                    url: '../login'
                })
            }
            if (res.result) {
                var orderNum = res.resultData.orderNum;
                Dialog.alert({
                    title: '提示',
                    message: res.message
                }).then(() => {
                    wx.redirectTo({
                        url: '../record/details?orderNum=' + orderNum
                    });
                });  
                that.$apply();
            }else{
                Dialog.alert({
                    title: '提示',
                    message: res.message
                })
            }
        });
    }

    onShow(){
        var that = this;
        wx.getStorage({
            key: 'clientInfo',
            success(res) {
                that.clientInfo = res.data;
                that.QueryData.CustomerID = res.data.id;
                that.$apply();
            }
        });
        wx.getStorage({
            key: 'productList',
            success(res) {
                that.QueryData.ProductList = res.data;
                that.$apply();
            }
        });
    }

    onLoad(e) {
        var that = this;
        that.userInfo.regionName = e.regionName;
        that.userInfo.name = e.name;
        wx.removeStorage({
            key: 'clientInfo'
        });
        wx.removeStorage({
            key: 'productList'
        });
    }
}
</script>
